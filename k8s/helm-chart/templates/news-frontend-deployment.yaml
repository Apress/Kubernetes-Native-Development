{{ if eq .Values.newsfrontend.deployment "on" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.newsfrontend.name }}
  name: {{ .Values.newsfrontend.name }}
spec:
  replicas: {{ .Values.newsfrontend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.newsfrontend.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.newsfrontend.name }}
      annotations:
        {{ if eq .Values.localnews.servicemesh "on" }}
        sidecar.istio.io/inject: "true"
        {{ end }}
    spec:
      containers:
        - image: {{ .Values.newsfrontend.image }}:{{ .Values.newsfrontend.imageTag }}
          imagePullPolicy: {{ .Values.localnews.imagePullPolicy }}
          name: {{ .Values.newsfrontend.name }}
          ports:
            - containerPort: {{ .Values.newsfrontend.ports.containerPort }}
          env:
          {{ if eq .Values.newsfrontend.backendConnection "viaNodePort" }}
            - name: {{ .Values.newsfrontend.envVars.backend.nodePort.key }}
              value: "{{ .Values.newsbackend.ports.nodePort }}"
            - name: {{ .Values.newsfrontend.envVars.backend.ip.key }}
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          {{ else if eq .Values.newsfrontend.backendConnection "viaIngress" }}
            - name: {{ .Values.newsfrontend.envVars.backend.prefix.key }}
              value: {{ .Values.newsfrontend.envVars.backend.prefix.value }}
            - name: {{ .Values.newsfrontend.envVars.backend.nodePort.key }}
              value: "{{ .Values.newsfrontend.envVars.backend.nodePort.value }}"
            - name: {{ .Values.newsfrontend.envVars.backend.ip.key }}
              value: {{ .Values.newsbackend.name }}.{{ .Values.localnews.domain }}
          {{ end }}
{{ end }}